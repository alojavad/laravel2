<!-- -->
@extends('master')

@section('content')
<article>
    <h1>Application Structure</h1>
    <ul>
        <li><a href="http://laravel.com/docs/5.0/structure#introduction">Introduction</a></li>
        <li><a href="http://laravel.com/docs/5.0/structure#the-root-directory">The Root Directory</a></li>
        <li><a href="http://laravel.com/docs/5.0/structure#the-app-directory">The App Directory</a></li>
        <li><a href="http://laravel.com/docs/5.0/structure#namespacing-your-application">Namespacing Your Application</a></li>
    </ul>
    <p><a name="introduction"></a></p>
    <h2><a href="http://laravel.com/docs/5.0/structure#introduction">Introduction</a></h2>
    <p>The default Laravel application structure is intended to provide a great starting point for both large and small applications. Of course, you are free to organize your application however you like. Laravel imposes almost no restrictions on where any given class is located - as long as Composer can autoload the class.</p>
    <p dir="rtl">ساختار پیش فرض برنامه لاراول تمایل دارد تا تهیه کند نقطه شروعی برای برنامه های کوچک وبرنامه های بزرگ.البته در سازماندهی برنامه تان ازاد هستید تا هر جور که دوست دارید برنامتان را سازماندهی کنید.لاراول در مورد محل قرار گیری کلاس ها اجباری ایجاد نمی کند.تا زمانی که composer  بتواند  کلاس ها را بازگذاری کند.</p>
    <p><a name="the-root-directory"></a></p>
    <h2><a href="http://laravel.com/docs/5.0/structure#the-root-directory">The Root Directory</a></h2>
    <p>The root directory of a fresh Laravel installation contains a variety of folders:</p>
    <p dir="rtl">پوشه اصلی لاراولی که تازه نصب شده است دارای تعدادی پوشه است.</p>
    <p>The <code class=" language-php">app</code> directory, as you might expect, contains the core code of your application. We'll explore this folder in more detail soon.</p>
    <p dir="rtl">پوشه app  همان طور که می توان انتظارداشت شامل کد اصلی برنامه است شما به زودی پیزهای بیشتری در مورد این پوشه خواهید  فهمید.</p>
    <p>The <code class=" language-php">bootstrap</code> folder contains a few files that bootstrap the framework and configure autoloading.</p>
    <p dir="rtl">پوشه bootstrap  شامل تعدادی فایل است که فریم ورک رو بوت یا اجرا می کنند واجرا رو پیکربندی می کنند.</p>
    <p>The <code class=" language-php">config</code> directory, as the name implies, contains all of your application's configuration files.</p>
    <p dir="rtl">پوشه config  همان طور که از نام ان پیدا ست شامل همه فایل های پیکربندی برنامه  است.</p>
    <p>The <code class=" language-php">database</code> folder contains your database migration and seeds.</p>
    <p dir="rtl">پوشه database  که شامل migration and seed   برای ایجاد جدول وقرار دادن داده در جدول</p>
    <p>The <code class=" language-php"><span class="token keyword">public</span></code> directory contains the front controller and your assets (images, JavaScript, CSS, etc.).</p>
    <p dir="rtl">پوشه public شامل کنترل کننده جلویی وفایل هایی از جمله javascript css</p>
    <p>The <code class=" language-php">resources</code> directory contains your views, raw assets (LESS, SASS, CoffeeScript), and "language" files.</p>
    <p dir="rtl">پوشه resources  شامل view ها وفایل های خام شامل ازجمله less sass coffeescript و language</p>
    <p>The <code class=" language-php">storage</code> directory contains compiled Blade templates, file based sessions, file caches, and other files generated by the framework.</p>
    <p dir="rtl">پوشه storage  شامل فالب های که کامپایل شده اند فایل های پایه ای session فایل های کش    وبقیه فایل های تولید شده فریم ورک</p>
    <p>The <code class=" language-php">tests</code> directory contains your automated tests.</p>
    <p dir="rtl">پوشه test  شامل testهای خودکار است.</p>
    <p>The <code class=" language-php">vendor</code> directory contains your Composer dependencies.</p>
    <p dir="rtl">پوشه vendor  فایل های composerدر این پوشه قرار می گیرد.</p>
    <p><a name="the-app-directory"></a></p>
    <h2><a href="http://laravel.com/docs/5.0/structure#the-app-directory">The App Directory</a></h2>
    <p>The "meat" of your application lives in the <code class=" language-php">app</code> directory. By default, this directory is namespaced under <code class=" language-php">App</code> and is autoloaded by Composer using the <a href="http://www.php-fig.org/psr/psr-4/">PSR-4 autoloading standard</a>. <strong>You may change this namespace using the <code class=" language-php">app<span class="token punctuation">:</span>name</code> Artisan command</strong>.</p>
    <p dir="rtl">غذای اصلی برنامه در پوشه app قرار دارد. به صورت پیش فرض این پوشه در فضای نام appقرار گرفته است و به صورت اتوماتیک بارگزاری می شود و بوسیله استاندارد بارگزاری psr-4

        این فضای نام با استفاده از فرمان app:nameایجاد شده است
    </p>
    <p>The <code> class=" language-php">app</code> directory ships with a variety of additional directories such as <code class=" language-php">Console</code>, <code class=" language-php">Http</code>, and <code class=" language-php">Providers</code>. Think of the <code class=" language-php">Console</code> and <code class=" language-php">Http</code> directories as providing an API into the "core" of your application. The HTTP protocol and CLI are both mechanisms to interact with your application, but do not actually contain application logic. In other words, they are simply two ways of issuing commands to your application. The <code class=" language-php">Console</code> directory contains all of your Artisan commands, while the <code class=" language-php">Http</code> directory contains your controllers, filters, and requests.</p>
    <p dir="rtl">پوشه app  همراه خود پوشه های دیگری از جمله console http provider را دارد.به خاطر داشته باشید که پوشه های http و console  واسطی را برای هسته برنامه فراهم می اورد پروتکل های http وفرمان های php artisan هر دو مکانیزم هایی برای تعامل با برنامه هستندو ولی واقعا شامل منطق برنامه نیستند . به عبارت دیگر انها  دو روش ساده برای فرمان دادن به برنامه هستند .console همه فرمان های artisan راشامل می شوددر خالی که http  شامل controller filter request ها می شود.</p>
    <p>The <code class=" language-php">Commands</code> directory, of course, houses the commands for your application. Commands represent jobs that can be queued by your application, as well as tasks that you can run synchronously within the current request lifecycle.</p>
    <p dir="rtl">پوشه command    خانه فرمان های برنامه است  فرمان هایی که کارها را اماده می کند که توسط برنامه می توان در صف قرار بگیرند  به همان خوبی که وظایفی که می توانند به صورت همزمان با چرخه اجرای دستور جاری اجرا شون</p>
    <p>The <code class=" language-php">Events</code> directory, as you might expect, houses event classes. Of course, using classes to represent events is not required; however, if you choose to use them, this directory is the default location they will be created by the Artisan command line.</p>
    <p dir="rtl">پوشه event همان طور که می توانید انتظار داشته باشید خانه کلاس های event  .البته استفاده از کلاس ها برای حاضزر کردن eventها نیازی نیست هرچند اگر شما تصمیم به استفاده از انها بگیرید این پوشه محل پیش فرض برای قرار گرفتن انها بعد ار ایجاد بوسیله فرمان های artisan است.</p>
    <p>The <code class=" language-php">Handlers</code> directory contains the handler classes for both commands and events. Handlers receive a command or event and perform logic in response to that command or event being fired.</p>
    <p dir="rtl">پو شه handler  شامل کلاس های handlerبرای command  ها و event ها    است.handlerدریافت شده از یک command یا از event در پاسخ به  event یا command  فعال شده یک پاسخ منطقی را اجرا می کند.</p>
    <p>The <code class=" language-php">Services</code> directory contains various "helper" services your application needs to function. For example, the <code class=" language-php">Registrar</code> service included with Laravel is responsible for validating and creating new users of your application. Other examples might be services to interact with external APIs, metrics systems, or even services that aggregate data from your own application.</p>
    <p dir="rtl">پوشه services  شامل انواع مختلفی از توابع sevice که برنامه برای اجرا نیاز دارد.برای نمونه سرویس  register  در لاراول قرار دارد تا مسئول اعتبار سنجی یا ایجاد کاربر جدید برای برنامه است .نمونه دیگری ممکن است سرویسی برای تعامل با برنامه های بیرونی سیستم متریک یا حتی سیستمی که برای جمع اوری داده از برنامه استفاده می شود.</p>
    <p>The <code class=" language-php">Exceptions</code> directory contains your application's exception handler and is also a good place to stick any exceptions thrown by your application.</p>
    <p dir="rtl">پوشه exception  شامل exceptionn های برنامه شما که راه اندازی می شوند و همچنین محل مناسبی برای قرار گرفتن استثنا های برنامه است.</p>
    <blockquote>
        <p><strong>Note:</strong> Many of the classes in the <code class=" language-php">app</code> directory can be generated by Artisan via commands. To review the available commands, run the <code class=" language-php">php artisan list make</code> command in your terminal.</p>
        <p dir="rtl">بیشتر کلاس های در پوشه app  می توانند توسط فرمان های artisan  تولید شوند.برای مشاهده لیست فرمان های موجود دستور php artisan list را اجرا می کنیم.</p>
    </blockquote>
    <p><a name="namespacing-your-application"></a></p>
    <h2><a href="http://laravel.com/docs/5.0/structure#namespacing-your-application">Namespacing Your Application</a></h2>
    <p>As discussed above, the default application namespace is <code class=" language-php">App</code>; however, you may change this namespace to match the name of your application, which is easily done via the <code class=" language-php">app<span class="token punctuation">:</span>name</code> Artisan command. For example, if your application is named "SocialNet", you would run the following command:</p>
    <p dir="rtl">همانطور که در بالا بحث شد فضای نام پیش فرض برنامه app است هرچند که شما می توانید این را مطابق صلیقه خودتان تغییر دهید این کار به سادگی با دستور php artisan app:name صورت می گیرد .برای نمونه اگر شما بخواهید نام برنامه را به socialnet تغییر دهید از فرمان زیر استفاده می کنید </p>
    <pre class=" language-php"><code class=" language-php">php artisan app<span class="token punctuation">:</span>name SocialNet</code></pre>
</article>
@stop